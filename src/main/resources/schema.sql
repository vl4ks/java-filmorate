DROP TABLE IF EXISTS FILM_GENRES;
DROP TABLE IF EXISTS FILM_RATINGS;
DROP TABLE IF EXISTS FRIENDS;
DROP TABLE IF EXISTS LIKES;
DROP TABLE IF EXISTS GENRES;
DROP TABLE IF EXISTS FILMS;
DROP TABLE IF EXISTS MPA_RATINGS;
DROP TABLE IF EXISTS USERS;

CREATE TABLE IF NOT EXISTS GENRES (
    genre_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS MPA_RATINGS (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(5) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL,
    release_date DATE NOT NULL,
    duration INT NOT NULL
);

CREATE TABLE IF NOT EXISTS USERS (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    login VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255),
    birthday TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS FILM_GENRES (
    film_id INTEGER REFERENCES FILMS(id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES GENRES(genre_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS FILM_RATINGS (
    film_id INTEGER REFERENCES FILMS(id) ON DELETE CASCADE,
    mpa_rating_id INTEGER REFERENCES MPA_RATINGS(id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, mpa_rating_id)
);

CREATE TABLE IF NOT EXISTS FRIENDS (
    user_id INTEGER,
    friend_id INTEGER,
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES USERS(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS LIKES (
    film_id INTEGER,
    user_id INTEGER,
    PRIMARY KEY (film_id, user_id),
    FOREIGN KEY (user_id) REFERENCES USERS(id),
    FOREIGN KEY (film_id) REFERENCES FILMS(id)
);